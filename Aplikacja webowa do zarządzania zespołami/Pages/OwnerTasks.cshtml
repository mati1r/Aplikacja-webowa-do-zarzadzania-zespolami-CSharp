@page "/OwnerTasks"
@model OwnerTasksModel
@{
    ViewData["Title"] = "Home page";
    Layout = "_TaskLayout";
}
@if (Model.data != "Owner")
{
    Response.Redirect("/");
}

<div class="w-100 h-100 d-inline-block overflow-auto bg-main">
    <div class="p-4">
        <h1 class="text-center display-6 fw-bold">Zadania użytkowników grupy - @Model.activeGroup</h1>
    </div>

    <div class="p-3">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="card bg-table">
                        <div class="card-body">
                            <div class="table-responsive" id="dataContainer">
                                <partial name="Partials/_PartialOwnerTasks" model="Model.tasksList" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Edit and delete modal-->
<div class="modal fade" tabindex="-1" role="dialog" id="edit-modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="title"></h5>
            </div>
            <form method="post" id="editForm">
                <div class="modal-body">
                    <div class="mt-md-4 pb-5">

                        <div class="container">
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label class="form-label" for="task-name">Nazwa zadania</label>
                                    <br />
                                    <input type="text" class="status-input form-control bg-dark" id="task-name" asp-for="createOrEditTask.task_name">
                                    <span asp-validation-for="createOrEditTask.task_name" class="text-danger"></span>
                                </div>

                                <div class="col-md-6 mb-4">
                                    <label class="form-label" for="task-user">Przypisz użytkownika</label>
                                    <br />
                                    <select id="task-user">
                                        @foreach (var item in Model.usersList)
                                        {
                                            <option value="@item.user_id">@item.username</option>
                                        }
                                    </select>
                                    <input type="hidden" asp-for="createOrEditTask.users_user_id" id="task-user-hidden" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label class="form-label" for="status">Status</label>
                                    <hr />
                                    <select id="status" class="status-input form-control bg-dark" asp-for="createOrEditTask.status">
                                        <option value="ukończone">Ukończone</option>
                                        <option value="nieukończone">Nieukończone</option>
                                    </select>
                                </div>

                                <div class="col-md-6 mb-4">
                                    <label class="form-label" for="priority">Stopień ważności</label>
                                    <hr/>
                                    <select id="priority" class="status-input form-control bg-dark" asp-for="createOrEditTask.priority">
                                        <option value="niski" style="color:green;">Niski</option>
                                        <option value="normalny" style="color:white;">Normalny</option>
                                        <option value="wysoki" style="color:red;">Wysoki</option>
                                    </select>
                                    <span asp-validation-for="createOrEditTask.priority" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label class="form-label" for="start-date">Data zadania</label>
                                    <hr/>
                                    <input type="datetime-local" id="start-date" class="status-input form-control text-light bg-dark" asp-for="createOrEditTask.start_date" />
                                    <span asp-validation-for="createOrEditTask.start_date" class="text-danger"></span>
                                </div>

                                <div class="col-md-6 mb-4">
                                    <label class="form-label" for="end-date">Data planowanego wykonania</label>
                                    <hr />
                                    <input type="datetime-local" id="end-date" class="status-input form-control text-light bg-dark" asp-for="createOrEditTask.end_date" />
                                    <span asp-validation-for="createOrEditTask.end_date" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="mb-4" id="feedbackDiv">
                                <div class="row">
                                    <div class="col-md-4 mb-4">
                                        <label>Data ukończenia zadania</label>
                                        <hr />
                                        <input type="datetime-local" id="finish-date" class="status-input form-control text-light bg-dark" />
                                    </div>
                                </div>
                                <label>Wiadomość zwrotna</label>
                                <hr />
                                <textarea id="feedback" class="status-input form-control bg-dark" rows="4"></textarea>
                            </div>

                            <div class="mb-4">
                                <label class="form-label" for="description">Opis zadania</label>
                                <br />
                                <textarea class="status-input form-control bg-dark" id="description" rows="4" asp-for="createOrEditTask.description"></textarea>
                                <span asp-validation-for="createOrEditTask.description" class="text-danger"></span>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
                    <button type="button" class="btn btn-danger" id="deleteBtn">Usuń</button>
                    <input type="hidden" asp-for="createOrEditTask.task_id" id="update" />
                    <button type="button" class="btn btn-primary" id="editBtn">Edytuj zadanie</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Confirm delete modal -->
<div class="modal fade" tabindex="-1" role="dialog" id="confirm-delete-modal">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <form method="post" id="deleteForm">
                <div class="modal-body">
                    <div class="container">
                        <div class="mb-3 mt-3">
                            <h4>Czy na pewno chcesz usunąć zadanie?</h4>
                        </div>
                    </div>
                    <hr />
                    <span asp-validation-for="createOrEditTask.description" class="text-danger text-start ms-3"></span>
                    <div class="text-end mb-3">
                        <button type="button" class="btn btn-secondary px-5 me-2" data-bs-dismiss="modal">Nie</button>
                        <input type="hidden" asp-for="createOrEditTask.task_id" id="delete" />
                        <button type="button" class="btn btn-danger px-5 me-2" id="confirmDeleteBtn">Tak</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<!--Create modal-->
<div class="modal fade" tabindex="-1" role="dialog" id="create-modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="title">Stwórz zadanie</h5>
            </div>
            <form method="post" asp-page-handler="Add" id="addForm">
                <div class="modal-body">
                    <div class="mt-md-4 pb-5">

                        <div class="container">
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label class="form-label" for="task-name2">Nazwa zadania</label>
                                    <br />
                                    <input type="text" class="form-control bg-dark" id="task-name2" asp-for="createOrEditTask.task_name">
                                    <span asp-validation-for="createOrEditTask.task_name" class="text-danger"></span>
                                </div>

                                <div class="col-md-6 mb-4">
                                    <label class="form-label" for="task-user2">Przypisz użytkownika</label>
                                    <br />
                                    <select id="task-user2">
                                        @foreach (var item in Model.usersList)
                                        {
                                            <option value="@item.user_id">@item.username</option>
                                        }
                                    </select>
                                    <input type="hidden" asp-for="createOrEditTask.users_user_id" id="task-user-hidden2" />
                                    <span asp-validation-for="createOrEditTask.users_user_id" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label class="form-label" for="status2">Status</label>
                                    <hr />
                                    <select id="status2" class="form-control bg-dark" asp-for="createOrEditTask.status">
                                        <option value="ukończone">Ukończone</option>
                                        <option selected="selected" value="nieukończone">Nieukończone</option>
                                    </select>
                                </div>

                                <div class="col-md-6 mb-4">
                                    <label class="form-label" for="priority2">Stopień ważności</label>
                                    <hr />
                                    <select id="priority2" class="form-control bg-dark" asp-for="createOrEditTask.priority">
                                        <option value="niski" style="color:green;">Niski</option>
                                        <option selected="selected" value="normalny" style="color:white;">Normalny</option>
                                        <option value="wysoki" style="color:red;">Wysoki</option>
                                    </select>
                                    <span asp-validation-for="createOrEditTask.priority" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label class="form-label" for="start-date2">Data zadania</label>
                                    <hr />
                                    <input type="datetime-local" id="start-date2" class="form-control text-light bg-dark" asp-for="createOrEditTask.start_date" />
                                    <span asp-validation-for="createOrEditTask.start_date" class="text-danger"></span>
                                </div>

                                <div class="col-md-6 mb-4">
                                    <label class="form-label" for="end-date2">Data planowanego wykonania</label>
                                    <hr />
                                    <input type="datetime-local" id="end-date2" class="form-control text-light bg-dark" asp-for="createOrEditTask.end_date" />
                                    <span asp-validation-for="createOrEditTask.end_date" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="mb-4">
                                <label class="form-label" for="description2">Opis zadania</label>
                                <br />
                                <textarea class="form-control bg-dark" id="description2" rows="4" asp-for="createOrEditTask.description"></textarea>
                                <span asp-validation-for="createOrEditTask.description" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
                    <button type="button" class="btn btn-primary" id="submitBtn">Stwórz zadanie</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts{
    <script>
        function HandleFormSubmit(form, valmsgFor) {
            let actionUrl = form.attr("action");

            $.ajax({
                type: form.attr("method"),
                url: actionUrl,
                data: form.serialize(),
                dataType: "json",
                success: function (data) {
                    if (Object.keys(data).length > 0 && !Array.isArray(data) && data != "success") {
                        let keys = Object.keys(data);

                        for (let i = 0; i < keys.length; i++) {
                            let key = keys[i];
                            let errors = data[key];
                            let errorSpan = $(`span[data-valmsg-for="${key}"]`);

                            if (errorSpan.length > 0) {
                                errorSpan.text(errors[0]);
                            }
                        }
                    } else if (Array.isArray(data) && data.length > 0) {
                        let nameValidationError = $(`span[data-valmsg-for="${valmsgFor}"]`);
                        nameValidationError.text(data[0]);
                    } else {
                        InvokeAjaxCallTasks();
                    }
                }
            });
        }

        function InvokeAjaxCallTasks() {
            $("#edit-modal").modal("hide");
            $("#confirm-delete-modal").modal("hide");
            $("#create-modal").modal("hide");

            if ($("#dataContainer").children().length > 0) {
                $("#dataContainer").empty();
            }

            $.ajax({
                type: 'get',
                url: '@Url.Page("OwnerTasks", "TaskPartial")',
                success: function (partialResult) {
                    $("#dataContainer").append(partialResult);
                    InitializeDataTable();
                }
            });
        }

        function InitializeDataTable() {

            $("#DataTable").DataTable({
                "oLanguage": {
                    "oPaginate": {
                        "sPrevious": "Poprzednie",
                        "sNext": "Następne"
                    },

                    "sInfo": "Pozycje od _START_ do _END_ z _TOTAL_ ",
                    "sLengthMenu": "Ilość pozycji _MENU_",
                    "sSearch": "Szukaj:",
                    "sInfoFiltered": "(wyszukane z _MAX_ pozycji)",
                    "sZeroRecords": "Brak wyników",
                    "sInfoEmpty": "Pozycje od 0 do 0 z 0 "
                },
                "initComplete": function () {
                    var searchInput = $(".dataTables_filter input");

                    // Add button next to seachbar
                    var customButton = $("<button class='btn btn-primary ms-2' data-bs-toggle='modal' data-bs-target='#create-modal' id='addButton'>Dodaj zadanie</button>");
                    searchInput.parent().append(customButton);
                }
            });

            $(".priority-table").each(function () {
                if ($(this).html() == "niski") {
                    $(this).css("color", "green");
                } else if ($(this).html() == "wysoki") {
                    $(this).css("color", "red");
                }
            });
        }

        function OnDataTableClick() {
            $(".dataTable tbody tr").click(function () {
                $.getJSON(`/OwnerTasks?handler=TaskJson&id=${$(this).data('id')}`).done(function (task) {
                    $("#title").text(task.task_name);
                    $("#task-name").val(task.task_name);
                    $("#description").text(task.description);
                    $("#status").val(task.status);
                    $("#priority").val(task.priority);
                    $("#start-date").val(task.start_date);
                    $("#end-date").val(task.end_date);
                    $("#update").val(task.task_id);
                    $("#delete").val(task.task_id);

                    //Set default value for selectize
                    let selectizeControl = $("#task-user").selectize()[0].selectize;
                    selectizeControl.setValue(task.users_user_id);

                    //Set value for hidden input
                    $("#task-user-hidden").val(task.users_user_id);

                    //Coloring
                    if (task.priority == "niski") {
                        $("#priority").css("color", "green");
                    } else if (task.priority == "wysoki") {
                        $("#priority").css("color", "red");
                    } else {
                        $("#priority").css("color", "rgba(255,255,255,0.5)");
                    }

                    //Status
                    if (task.status == "ukończone") {
                        $(".status-input").prop("disabled", true);
                        $("#feedback").val(task.feedback);
                        $("#finish-date").val(task.finish_date);
                        $("#feedbackDiv").show();
                        $('#task-user')[0].selectize.disable();

                    } else {
                        $(".status-input").prop("disabled", false);
                        $("#feedback").val("");
                        $("#finish-date").val("");
                        $("#feedbackDiv").hide();
                        $('#task-user')[0].selectize.enable();
                    }
                });
            });

            //Change color inside a modal
            $("#priority").on("change", function () {
                var selectedPriority = $(this).val();

                var priorityElement = $("#priority");

                if (selectedPriority == "niski") {
                    priorityElement.css("color", "green");;
                } else if (selectedPriority == "wysoki") {
                    priorityElement.css("color", "red");
                } else {
                    priorityElement.css("color", "rgba(255,255,255,0.5)");
                }
            });
        }

        function SetCurrentDate(elementId){

            let dateInput = $(elementId);
            let currentDate = new Date();

            console.log(dateInput);

            let formattedDate = currentDate.toISOString().slice(0, 16);

            dateInput.val(formattedDate);
        }

        $(document).ready(function () {

            SetCurrentDate("#start-date2");
            SetCurrentDate("#end-date2");

            $("#task-user").selectize({
                sortField: "text",

                onChange: function (value) {
                    //Set value for hidden input
                    $("#task-user-hidden").val(value);
                }
            });

            $("#task-user2").selectize({
                sortField: "text",

                onChange: function (value) {
                    //Set value for hidden input
                    $("#task-user-hidden2").val(value);
                }
            });

            //Get value of initialized item
            let selectizeValue = $("#task-user2").selectize()[0].selectize.getValue();

            //Set value for hidden input
            $("#task-user-hidden2").val(selectizeValue);

            //Change action for submit
            $("#deleteBtn").click(function () {
                $("span[data-valmsg-for]").text("");
                $("#edit-modal").modal("hide");
                $("#confirm-delete-modal").modal("show");
            });

            $("#confirmDeleteBtn").click(function() {
                $("#deleteForm").attr("action", "/OwnerTasks?handler=Delete");
                $("#deleteForm").submit();
            })

            $("#submitBtn").click(function () {
                $("#addForm").submit();
            });

            $("#editBtn").click(function () {
                $("#editForm").attr("action", "/OwnerTasks?handler=Edit");
                $("#editForm").submit();
            });

            $("form").on("submit", function () {
                $("span[data-valmsg-for]").text("");
            });

            //Cleaning function on modal call
            $("#edit-modal").on("show.bs.modal", function () {
                $("span[data-valmsg-for]").text("");
            });

            $("#create-modal").on("show.bs.modal", function () {
                $("span[data-valmsg-for]").text("");
            });
            //Return errors on validation for specific span
            $("form").submit(function (event) {
                event.preventDefault();
                HandleFormSubmit($(this), "createOrEditTask.description");             
            });

            //Change color inside a create modal
            $("#priority2").on("change", function () {
                var selectedPriority = $(this).val();

                var priorityElement = $("#priority2");

                priorityElement.removeClass("green red normal");

                if (selectedPriority == "niski") {
                    priorityElement.css("color", "green");;
                } else if (selectedPriority == "wysoki") {
                    priorityElement.css("color", "red");
                } else {
                    priorityElement.css("color", "rgba(255,255,255,0.5)");
                }
            });

        //DataTable
            InitializeDataTable();

        //Modal text and coloring for priority
            OnDataTableClick();
        })

        $(document).ajaxSuccess(function (event, xhr, settings) {
            if (settings.url === '@Url.Page("OwnerTasks", "TaskPartial")') {
                OnDataTableClick();
            }
        });

    </script>
}