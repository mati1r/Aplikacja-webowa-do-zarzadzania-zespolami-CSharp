@page "/UserTasks"
@model UserTasksModel
@{
    ViewData["Title"] = "Home page";
    Layout = "_TaskLayout";
}
@if (Model.data != "User")
{
    Response.Redirect("/");
}


<div class="w-100 h-100 d-inline-block overflow-auto bg-main">
    <div class="p-4">
        <h1 class="text-center display-6 fw-bold">Zadania</h1>
    </div>

    <div class="p-3">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="card bg-table">
                        <div class="card-body">
                            <div class="table-responsive" id="dataContainer">
                                <partial name="Partials/_PartialUserTasks" model="Model.tasksList" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="card bg-table">
                        <div class="card-body" id="timelineContainer">
                            <partial name="Partials/_PartialTimelineView" model="Model.timelineTaskList" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Complete task modal -->
<div class="modal fade" tabindex="-1" role="dialog" id="complete-modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="title"></h5>
            </div>
            <form method="post" id="completeForm">
                <div class="modal-body">
                    <div class="mt-md-4 pb-5">
                        <div class="container">
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label>Status</label>
                                    <hr />
                                    <p class="text-white-50" id="status"></p>
                                </div>

                                <div class="col-md-6 mb-4">
                                    <label>Stopień ważność</label>
                                    <hr />
                                    <p class="" id="priority"></p>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label>Data zadania</label>
                                    <hr/>
                                    <p class="text-white-50" id="start-date"></p>
                                </div>

                                <div class="col-md-6 mb-4">
                                    <label>Data wykonania</label>
                                    <hr />
                                    <p class="text-white-50" id="end-date"></p>
                                </div>
                            </div>
                            <div class="mb-4">
                                <label>Opis zadania</label>
                                <p class="text-white-50 mb-5 mt-2" id="description"></p>
                            </div>
                            <div class="mb-4">
                                <label>Wiadomość zwrotna (opcjonalna)</label>
                                <hr />
                                <textarea id="feedback" asp-for="feedbackMessage" class="form-control bg-dark" rows="4"></textarea>
                                <span asp-validation-for="feedbackMessage" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
                    <input type="hidden" asp-for="actionTaskId" id="update"/>
                    <button type="button" class="btn btn-warning" id="currentBtn">Odznacz jako w trakcie</button>
                    <button type="button" class="btn btn-danger" id="notCompleteBtn">Odznacz jako niewykonane</button>
                    <button type="button" class="btn btn-primary" id="submitBtn">Odznacz jako wykonane</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Confirm complete task modal modal -->
<div class="modal fade" tabindex="-1" role="dialog" id="confirm-complete-modal">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div class="container">
                    <div class="mb-3 mt-3">
                        <h4>Czy na pewno chcesz odznaczyć zadanie jako ukończone?</h4>
                    </div>
                </div>
                <hr />
                <span asp-validation-for="feedbackMessage" class="text-danger ms-3"></span>
                <div class="text-end mb-3">
                    <button type="button" class="btn btn-secondary px-5 me-2" data-bs-dismiss="modal">Nie</button>
                    <button type="button" class="btn btn-primary px-5 me-2" id="confirmCompleteBtn">Tak</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>

        function TimelineClick(){

            function getNameOfTask() {
                $(".timeline-task").on("click", function () {
                    $.getJSON(`/UserTasks?handler=TaskJson&id=${$(this).data('id')}`).done(function (task) {
                        $("#title").text(task.task_name);
                        $("#description").text(task.description);
                        $("#status").text(task.status);
                        $("#priority").text(task.priority);
                        $("#start-date").text(task.start_date.replace("T", " "));
                        $("#end-date").text(task.end_date.replace("T", " "));
                        $("#update").val(task.task_id);
                        $("#feedback").val(task.feedback);

                        //Modal text and coloring for priority
                        if (task.priority == "niski") {
                            $("#priority").css("color", "green");
                        } else if (task.priority == "wysoki") {
                            $("#priority").css("color", "red");
                        } else {
                            $("#priority").css("color", "rgba(255,255,255,0.5)");
                        }

                        if (task.status === "ukończone") {
                            console.log("co")
                            $("#submitBtn").hide();
                            $("#currentBtn").hide();
                            $("#notCompleteBtn").hide();
                            $("#feedback").prop("disabled", true);
                        } else if (task.status === "w trakcie") {
                            $("#submitBtn").show();
                            $("#currentBtn").hide();
                            $("#notCompleteBtn").show();
                            $("#feedback").prop("disabled", false);
                        } else if (task.status === "nieukończone") {
                            $("#submitBtn").show();
                            $("#currentBtn").show();
                            $("#notCompleteBtn").hide();
                            $("#feedback").prop("disabled", false);
                        }
                    });
                    $("#complete-modal").modal("show");
                });
            }

            //Initialize after loading page
            getNameOfTask();

            //Initialzie after redrawing
            $("#prevMonthButton").click(() => {
                getNameOfTask();
            });

            $("#nextMonthButton").click(() => {
                getNameOfTask();
            });
        }

        function HandleFormSubmit(form, valmsgFor) {
            let actionUrl = form.attr("action");

            $.ajax({
                type: form.attr("method"),
                url: actionUrl,
                data: form.serialize(),
                dataType: "json",
                success: function (data) {
                    if (Object.keys(data).length > 0 && !Array.isArray(data) && data != "success") {
                        let keys = Object.keys(data);

                        for (let i = 0; i < keys.length; i++) {
                            let key = keys[i];
                            let errors = data[key];
                            let errorSpan = $(`span[data-valmsg-for="${key}"]`);

                            if (errorSpan.length > 0) {
                                errorSpan.text(errors[0]);
                            }
                        }
                    } else if (Array.isArray(data) && data.length > 0) {
                        let nameValidationError = $(`span[data-valmsg-for="${valmsgFor}"]`);
                        nameValidationError.text(data[0]);
                    } else {
                        //Reload dataTable and timeline elements on the page
                        InvokeAjaxCallTasks()
                        InvokeAjaxCallTimeline();
                    }
                }
            });
        }

        //For dataTable
        function InvokeAjaxCallTasks() {
            $("#complete-modal").modal("hide");
            $("#confirm-complete-modal").modal("hide");

            if ($("#dataContainer").children().length > 0) {
                $("#dataContainer").empty();
            }

            $.ajax({
                type: 'get',
                url: '@Url.Page("UserTasks", "TaskPartial")',
                success: function (partialResult) {
                    $("#dataContainer").append(partialResult);
                    InitializeDataTable();
                }
            });
        }

        //For timeline
        function InvokeAjaxCallTimeline() {
            $("#complete-modal").modal("hide");
            $("#confirm-complete-modal").modal("hide");

            if ($("#timelineContainer").children().length > 0) {
                $("#timelineContainer").empty();
            }

            $.ajax({
                type: 'get',
                url: '@Url.Page("UserTasks", "TimelinePartial")',
                success: function (partialResult) {
                    $("#timelineContainer").append(partialResult);
                }
            });
        }

        function OnDataTableClick() {
            //Modal text and coloring for priority
            let table = $("#DataTable");
            table.on("click", "tbody tr", function () {
                $.getJSON(`/UserTasks?handler=TaskJson&id=${$(this).data('id')}`).done(function (task) {
                    $("#title").text(task.task_name);
                    $("#description").text(task.description);
                    $("#status").text(task.status);
                    $("#priority").text(task.priority);
                    $("#start-date").text(task.start_date.replace("T", " "));
                    $("#end-date").text(task.end_date.replace("T", " "));
                    $("#update").val(task.task_id);
                    $("#feedback").val(task.feedback);

                    //Modal text and coloring for priority
                    if (task.priority == "niski") {
                        $("#priority").css("color", "green");
                    } else if (task.priority == "wysoki") {
                        $("#priority").css("color", "red");
                    } else {
                        $("#priority").css("color", "rgba(255,255,255,0.5)");
                    }

                    if (task.status === "ukończone") {
                        console.log("co")
                        $("#submitBtn").hide();
                        $("#currentBtn").hide();
                        $("#notCompleteBtn").hide();
                        $("#feedback").prop("disabled", true);
                    } else if(task.status === "w trakcie") {
                        $("#submitBtn").show();
                        $("#currentBtn").hide();
                        $("#notCompleteBtn").show();
                        $("#feedback").prop("disabled", false);
                    } else if(task.status === "nieukończone") {
                        $("#submitBtn").show();
                        $("#currentBtn").show();
                        $("#notCompleteBtn").hide();
                        $("#feedback").prop("disabled", false);
                    }
                });
            });
        }

        function InitializeDataTable()
        {
            $("#DataTable").DataTable({
                "oLanguage": {
                    "oPaginate": {
                        "sPrevious": "Poprzednie",
                        "sNext": "Następne"
                    },

                    "sInfo": "Pozycje od _START_ do _END_ z _TOTAL_ ",
                    "sLengthMenu": "Ilość pozycji _MENU_",
                    "sSearch": "Szukaj:",
                    "sInfoFiltered": "(wyszukane z _MAX_ pozycji)",
                    "sZeroRecords": "Brak wyników",
                    "sInfoEmpty": "Pozycje od 0 do 0 z 0 "
                }
            });

            //DataTable coloring for priority
            $(".priority-table").each(function () {
                if ($(this).html() == "niski") {
                    $(this).css("color", "green");
                } else if ($(this).html() == "wysoki") {
                    $(this).css("color", "red");
                }
            });
        }

        //Color table on page change
        function ColorTable() {
            let table = $("#DataTable").DataTable();
            table.on("draw", function () {
                $(".priority-table").each(function () {
                    if ($(this).html() == "niski") {
                        $(this).css("color", "green");
                    } else if ($(this).html() == "wysoki") {
                        $(this).css("color", "red");
                    }
                });
            });
        }

        $(document).ready(function () {

            TimelineClick();
            InitializeDataTable();
            ColorTable();

            OnDataTableClick();

            $("#submitBtn").click(function () {
                $("span[data-valmsg-for]").text("");
                $("#complete-modal").modal("hide");
                $("#confirm-complete-modal").modal("show");
            });

            $("#currentBtn").click(function () {
                $("span[data-valmsg-for]").text("");
                $("#complete-modal").modal("hide");
                $("#completeForm").attr("action", "/UserTasks?handler=Current");
                $("#completeForm").submit();
            });

            $("#notCompleteBtn").click(function () {
                $("span[data-valmsg-for]").text("");
                $("#complete-modal").modal("hide");
                $("#completeForm").attr("action", "/UserTasks?handler=NotComplete");
                $("#completeForm").submit();
            });

            $("#confirmCompleteBtn").click(function(){
                $("#completeForm").attr("action", "/UserTasks?handler=Complete");
                $("#completeForm").submit();
            })

            $("form").on("submit", function () {
                $("span[data-valmsg-for]").text("");
            });

            //Cleaning on modal call
            $("#complete-modal").on("show.bs.modal", function () {
                $("span[data-valmsg-for]").text("");
                $("#feedback").val("");
            });

            $("form").submit(function (event) {
                event.preventDefault();
                HandleFormSubmit($(this), "feedbackMessage");
            });
            
        });

        //Reinitialize functions after ajax reload
        $(document).ajaxSuccess(function (event, xhr, settings) {
            if (settings.url === '@Url.Page("UserTasks", "TaskPartial")') {
                OnDataTableClick();
                ColorTable();
            }

            if (settings.url === '@Url.Page("UserTasks", "TimelinePartial")') {
                TimelineClick();
            }
        });
</script>
}




