@page "/UserTasks"
@model UserTasksModel
@{
    ViewData["Title"] = "Home page";
    Layout = "_TaskLayout";
}
@if (Model.data != "User")
{
    Response.Redirect("/");
}


<div class="w-100 h-100 d-inline-block overflow-auto bg-main">
    <div class="p-4">
        <h1 class="text-center display-6 fw-bold">Zadania</h1>
    </div>

    <div class="p-3">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="card bg-table">
                        <div class="card-body">
                            <div class="table-responsive" id="dataContainer">
                                <table id="DataTable" class="dataTable table table-borderless">
                                    <thead>
                                        <tr>
                                            <th scope="col">Nazwa zadania</th>
                                            <th scope="col">Data zadania</th>
                                            <th scope="col">Data wykonania</th>
                                            <th scope="col">Status</th>
                                            <th scope="col">Stopień ważności</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach(var item in Model.tasksList)
                                        {
                                        <tr data-id="@item.task_id" data-bs-toggle="modal" data-bs-target="#details-modal">
                                            <td>@item.task_name</td>
                                            <td>@item.start_date</td>
                                            <td>@item.end_date</td>
                                            <td>@item.status</td>
                                            <td class="priority-table">@item.priority</td>
                                        </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="details-modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="title"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" id="completeForm" asp-page-handler="Complete">
                <div class="modal-body">
                    <div class="mt-md-4 pb-5">
                        <div class="container">
                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label>Status</label>
                                    <hr />
                                    <p class="text-white-50" id="status"></p>
                                </div>

                                <div class="col-md-6 mb-4">
                                    <label>Stopień ważność</label>
                                    <hr />
                                    <p class="" id="priority"></p>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-4">
                                    <label>Data zadania</label>
                                    <hr/>
                                    <p class="text-white-50" id="start-date"></p>
                                </div>

                                <div class="col-md-6 mb-4">
                                    <label>Data wykonania</label>
                                    <hr />
                                    <p class="text-white-50" id="end-date"></p>
                                </div>
                            </div>
                            <div class="mb-4">
                                <label>Opis zadania</label>
                                <p class="text-white-50 mb-5 mt-2" id="description"></p>
                            </div>
                            <div class="mb-4">
                                <label>Wiadomość zwrotna (opcjonalna)</label>
                                <hr />
                                <textarea id="feedback" asp-for="feedbackMessage" class="form-control bg-dark" rows="4"></textarea>
                                <span asp-validation-for="feedbackMessage" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
                    <input type="hidden" asp-for="actionTaskId" id="update"/>
                    <button type="button" class="btn btn-primary" id="submitBtn">Odznacz jako wykonane</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts{
    <script>

        function HandleFormSubmit(form, valmsgFor) {
            let actionUrl = form.attr("action");

            $.ajax({
                type: form.attr("method"),
                url: actionUrl,
                data: form.serialize(),
                dataType: "json",
                success: function (data) {
                    if (Object.keys(data).length > 0 && !Array.isArray(data) && data != "success") {
                        let keys = Object.keys(data);

                        for (let i = 0; i < keys.length; i++) {
                            let key = keys[i];
                            let errors = data[key];
                            let errorSpan = $(`span[data-valmsg-for="${key}"]`);

                            if (errorSpan.length > 0) {
                                errorSpan.text(errors[0]);
                            }
                        }
                    } else if (Array.isArray(data) && data.length > 0) {
                        let nameValidationError = $(`span[data-valmsg-for="${valmsgFor}"]`);
                        nameValidationError.text(data[0]);
                    } else {
                        InvokeAjaxCallTasks();
                    }
                }
            });
        }

        function InvokeAjaxCallTasks() {
            $("#details-modal").modal("hide");

            if ($("#dataContainer").children().length > 0) {
                $("#dataContainer").empty();
            }

            $.ajax({
                type: 'get',
                url: '@Url.Page("UserTasks", "TaskPartial")',
                success: function (partialResult) {
                    $("#dataContainer").append(partialResult);
                    InitializeDataTable();
                }
            });
        }

        function OnDataTableClick() {
            //Modal text and coloring for priority
            $(".dataTable tbody tr").click(function () {
                $.getJSON(`/UserTasks?handler=TaskJson&id=${$(this).data('id')}`).done(function (task) {
                    $("#title").text(task.task_name);
                    $("#description").text(task.description);
                    $("#status").text(task.status);
                    $("#priority").text(task.priority);
                    $("#start-date").text(task.start_date.replace("T", " "));
                    $("#end-date").text(task.end_date.replace("T", " "));
                    $("#update").val(task.task_id);
                    $("#feedback").val(task.feedback);

                    if (task.priority == "niski") {
                        $("#priority").css("color", "green");
                    } else if (task.priority == "wysoki") {
                        $("#priority").css("color", "red");
                    } else {
                        $("#priority").addClass("text-white-50");
                    }

                    if (task.status === "ukończone") {
                        $("#action-btn").hide(); // Ukryj przycisk, jeśli status jest "ukonczone"
                        $("#feedback").prop("disabled", true);
                    } else {
                        $("#action-btn").show(); // Pokaż przycisk w przeciwnym przypadku
                        $("#feedback").prop("disabled", false);
                    }
                });
            });
        }

        function InitializeDataTable()
        {
            $("#DataTable").DataTable({
                "oLanguage": {
                    "oPaginate": {
                        "sPrevious": "Poprzednie",
                        "sNext": "Następne"
                    },

                    "sInfo": "Pozycje od _START_ do _END_ z _TOTAL_ ",
                    "sLengthMenu": "Ilość pozycji _MENU_",
                    "sSearch": "Szukaj:",
                    "sInfoFiltered": "(wyszukane z _MAX_ pozycji)",
                    "sZeroRecords": "Brak wyników",
                    "sInfoEmpty": "Pozycje od 0 do 0 z 0 "
                }
            });

            //DataTable coloring for priority
            $(".priority-table").each(function () {
                if ($(this).html() == "niski") {
                    $(this).css("color", "green");
                } else if ($(this).html() == "wysoki") {
                    $(this).css("color", "red");
                }
            });
        }

        $(document).ready(function () {

            InitializeDataTable();

            OnDataTableClick();

            $("#submitBtn").click(function () {
                $("#completeForm").submit();
            });

            $("form").on("submit", function () {
                $("span[data-valmsg-for]").text("");
            });

            //Cleaning on modal call
            $("#details-modal").on("show.bs.modal", function () {
                $("span[data-valmsg-for]").text("");
                $("#feedback").val("");
            });

            $("form").submit(function (event) {
                event.preventDefault();
                HandleFormSubmit($(this), "feedbackMessage");
            });
            
        });

        $(document).ajaxSuccess(function (event, xhr, settings) {
            if (settings.url === '@Url.Page("UserTasks", "TaskPartial")') {
                OnDataTableClick();
            }
        });
</script>
}




